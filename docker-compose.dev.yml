services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      # Mount points - these will be mapped to host paths in production
      - data_volume:/app/data
      - config_volume:/app/config
      - media_volume:/app/media
      - temp_volume:/app/temp
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=sqlite:///data/app.db
      - MEDIA_DIR=/app/media
      - TEMP_DIR=/app/temp
      - CONFIG_FILE=/app/config/config.yaml
    depends_on:
      - db-init
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - app-network

  db-init:
    image: alpine:latest
    volumes:
      - data_volume:/data
      - config_volume:/config
      - media_volume:/media
      - temp_volume:/temp
    command: >
      sh -c "
        mkdir -p /data /config /media /temp &&
        chmod 755 /data /config /media /temp &&
        echo 'Directories initialized for development' &&
        echo 'In production, these will be host mount points'
      "

volumes:
  # Development volumes - in production these will be host mount points
  data_volume:
  config_volume:
  media_volume:
  temp_volume:
  node_modules:

networks:
  app-network:
    driver: bridge