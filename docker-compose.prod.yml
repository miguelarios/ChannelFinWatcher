# Production Docker Compose with host mount points
# Copy this file and modify the host paths for your server setup

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      # HOST MOUNT POINTS - Update these paths for your server
      - /path/to/your/server/data:/app/data                    # Database and application data
      - /path/to/your/server/config:/app/config                # YAML configuration files
      - /path/to/your/server/media:/app/media                  # Downloaded video files (for Jellyfin)
      - /path/to/your/server/temp:/app/temp                    # Temporary download files
      # Optional: Cookie file for age-restricted content
      # - /path/to/your/server/cookies.txt:/app/cookies.txt
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=sqlite:///data/app.db
      - MEDIA_DIR=/app/media
      - TEMP_DIR=/app/temp
      - CONFIG_FILE=/app/config/config.yaml
      - DEBUG=false
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NODE_ENV=production
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

# Example host directory structure on your server:
# /path/to/your/server/
# ├── data/              # SQLite database, application state
# ├── config/            # config.yaml file
# ├── media/             # Downloaded videos organized for Jellyfin
# │   └── ChannelName [channel_id]/
# │       └── YYYY/
# │           └── ChannelName - upload_date - title [video_id]/
# └── temp/              # Temporary files during download